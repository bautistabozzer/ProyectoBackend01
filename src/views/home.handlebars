<div class="row mb-4">
    <div class="col-md-3">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Filtros</h5>
                <form id="filter-form">
                    <div class="mb-3">
                        <label class="form-label">Categoría</label>
                        <select class="form-select" name="category">
                            <option value="">Todas</option>
                            {{#each categories}}
                            <option value="{{this}}" {{#if (eq ../selectedCategory this)}}selected{{/if}}>{{this}}</option>
                            {{/each}}
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Precio</label>
                        <div class="d-flex gap-2">
                            <input type="number" class="form-control" name="minPrice" placeholder="Min" value="{{filters.minPrice}}">
                            <input type="number" class="form-control" name="maxPrice" placeholder="Max" value="{{filters.maxPrice}}">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Estado</label>
                        <select class="form-select" name="status">
                            <option value="">Todos</option>
                            <option value="true" {{#if (eq filters.status "true")}}selected{{/if}}>Activo</option>
                            <option value="false" {{#if (eq filters.status "false")}}selected{{/if}}>Inactivo</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Ordenar por precio</label>
                        <select class="form-select" name="sort">
                            <option value="">Sin orden</option>
                            <option value="asc" {{#if (eq filters.sort "asc")}}selected{{/if}}>Menor a mayor</option>
                            <option value="desc" {{#if (eq filters.sort "desc")}}selected{{/if}}>Mayor a menor</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Aplicar Filtros</button>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        <div class="row row-cols-1 row-cols-md-3 g-4">
            {{#each products.docs}}
            <div class="col">
                <div class="card h-100">
                    {{#if thumbnails.[0]}}
                    <img src="{{thumbnails.[0]}}" class="card-img-top" alt="{{title}}">
                    {{else}}
                    <div class="card-img-top bg-secondary text-white d-flex align-items-center justify-content-center" style="height: 200px;">
                        <i class="bi bi-image fs-1"></i>
                    </div>
                    {{/if}}
                    <div class="card-body">
                        <h5 class="card-title">{{title}}</h5>
                        <p class="card-text">{{description}}</p>
                        <div class="d-flex justify-content-between align-items-center">
                            {{#if onSale}}
                            <div>
                                <span class="text-decoration-line-through text-muted">${{price}}</span>
                                <span class="text-danger fs-5 ms-2">${{finalPrice}}</span>
                            </div>
                            <span class="badge bg-danger">Oferta</span>
                            {{else}}
                            <span class="fs-5">${{price}}</span>
                            {{/if}}
                        </div>
                        <div class="mt-3">
                            <button class="btn btn-primary add-to-cart" data-product-id="{{_id}}" {{#unless status}}disabled{{/unless}}>
                                <i class="bi bi-cart-plus"></i> Agregar
                            </button>
                            <a href="/products/{{_id}}" class="btn btn-outline-secondary">
                                <i class="bi bi-eye"></i> Ver
                            </a>
                        </div>
                    </div>
                    <div class="card-footer">
                        <small class="text-muted">Stock: {{stock}} unidades</small>
                    </div>
                </div>
            </div>
            {{/each}}
        </div>

        {{#if products.totalPages}}
        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                {{#if products.hasPrevPage}}
                <li class="page-item">
                    <a class="page-link" href="?page={{products.prevPage}}{{#if filters.category}}&category={{filters.category}}{{/if}}{{#if filters.sort}}&sort={{filters.sort}}{{/if}}">Anterior</a>
                </li>
                {{/if}}
                
                {{#each (range 1 products.totalPages)}}
                <li class="page-item {{#if (eq this ../products.page)}}active{{/if}}">
                    <a class="page-link" href="?page={{this}}{{#if ../filters.category}}&category={{../filters.category}}{{/if}}{{#if ../filters.sort}}&sort={{../filters.sort}}{{/if}}">{{this}}</a>
                </li>
                {{/each}}

                {{#if products.hasNextPage}}
                <li class="page-item">
                    <a class="page-link" href="?page={{products.nextPage}}{{#if filters.category}}&category={{filters.category}}{{/if}}{{#if filters.sort}}&sort={{filters.sort}}{{/if}}">Siguiente</a>
                </li>
                {{/if}}
            </ul>
        </nav>
        {{/if}}
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const socket = io();
        const filterForm = document.getElementById('filter-form');
        const addToCartButtons = document.querySelectorAll('.add-to-cart');

        // Manejar filtros
        filterForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const formData = new FormData(filterForm);
            const params = new URLSearchParams();

            for (const [key, value] of formData.entries()) {
                if (value) params.append(key, value);
            }

            window.location.href = `/?${params.toString()}`;
        });

        // Manejar agregar al carrito
        addToCartButtons.forEach(button => {
            button.addEventListener('click', async () => {
                const productId = button.dataset.productId;
                const token = localStorage.getItem('token');
                
                // Verificar si el usuario está autenticado
                if (!token) {
                    window.location.href = '/login';
                    return;
                }
                
                try {
                    const response = await fetch(`/api/carts/current/products/${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                        body: JSON.stringify({ quantity: 1 })
                    });

                    if (response.ok) {
                        const result = await response.json();
                        // Actualizar contador del carrito
                        document.getElementById('cart-count').textContent = 
                            result.payload.products.reduce((total, item) => total + item.quantity, 0);
                            
                        // Mostrar mensaje de éxito
                        window.multishop.showToast('Producto agregado al carrito', 'success');
                    } else {
                        const error = await response.json();
                        window.multishop.showToast(error.message || 'Error al agregar al carrito', 'danger');
                    }
                } catch (error) {
                    console.error('Error al agregar al carrito:', error);
                    window.multishop.showToast('Error al agregar al carrito', 'danger');
                }
            });
        });

        // Escuchar actualizaciones en tiempo real
        socket.on('productUpdated', (product) => {
            const productCard = document.querySelector(`[data-product-id="${product._id}"]`).closest('.card');
            if (productCard) {
                // Actualizar stock y estado
                const stockElement = productCard.querySelector('.text-muted');
                stockElement.textContent = `Stock: ${product.stock} unidades`;
                
                const addButton = productCard.querySelector('.add-to-cart');
                addButton.disabled = !product.status || product.stock === 0;
            }
        });
    });
</script> 